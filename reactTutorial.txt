REACT	

By stephen grider

jest looks for .test file in src

--->gulp serve

11.05.2019
---------->npm i -g create-react-app
-------->create-react-app
---------->add roaming/npm path in path and system variables 
src--must contain index.js


in index.js
import React from 'react';
import ReactDom from 'react-dom';
import App from './component/App';

ReactDom.render(<App />,
                document.querySelector('#root'))



		in app.js
		import React from 'react';

export default () => {
    return (
        <div>
            hello app component
        </div>
    );
};


absolute refrencses---->


ES6 part-2

Spread --->is three dots


[...arr,4]

Destructuring---->to pull out from object

Const {name, address,hobbies}= profile



Template literals=`dnms ${this.name}`;--->using tilde operators


Modules 

Export
And import

--->default export not in parenthesis while importing

13/05/2019
14/05/2019

in index.html in public---we have title
index.js--->is entry point for java script

ReactDom has function called render takes two parameter (<compoent name>,document.getElementById(where to put))

---->import css files in js only


every Component class will extend COmponent class-->i.e included with react

S3e1--->Smart component and dumb component--->smart component having states(must have class)
--->dumb component are static 
and stateless function

to amnage state among component we need ContextAPI, stateManager like Redux,

S3e2
JSX---->jsx rule use className instead of class
	---->we can't use for else we can use htmlFor
	---->we must have to use /> even in input or <br />
	--->must return one element only


	s3e3=----->in class we can define constant like js in render and while returning we can use curly braces {name}
	in div to access

we can use html anywhere in return, we can use braces only if want to perform computation  

S3e4
------->vs extension ES7 React/Redux/GraphQL/React-Native snippets
---> while importing is we export as default no need to use { curly braces while importing} 

S3e5--->function in place of class--->if we dont want states

s3e6--->props are short for prooperty --->when we use child component in parent component for viewing component we can
pass values in child component whether class level component or function level componen---->in order to access it from 
function level we can get one parameter named as props and in class level component we can use it by this keyword in curly 
{this.props.name} braces

Destructuring in ES6-===> {name, phone}=this.props;--->must have same structure


LEARNING DIRECT THROUGH NET
---->16/05/2019
--->despite of searching problem --->search how to start

07.06.2019
S3e7----->defaultProps--->impotant

S3e8====>Styling
s3e9--->bootstrap-->npm install bootstrap--->in app.js
import 'bootstrap/dist/css/bootstrap.min.css'

npm i --save react-bootstrap

08.06.2019
s4e1---this.state--->render and react written in class only-->state can be written in constructor or outside constructor

S4e2--->state will always be object--->event like onClick can call custom fn but inorder to access this we need arrow fn or bind keyword 

<button onClick={()=>saveToProfileData()}>SUBMIT</button>

s4e3---->react-fragment---->changing state

s4e4---4. Changing State From Another Component

s4e5--->provider --->contextAPI---->consumer

s4e6---->context reducer

create component---type rcc to get structure

s5e1---> creating form

s5e2--->handle form data

s5e3---->handle form without using state and by using ref

By stephen grider

jest looks for .test file in src

--->gulp serve

11.05.2019
---------->npm i -g create-react-app
====>no more in useNOW

$ npx create-react-app my-app
$ cd my-app


-------->create-react-app app_name
---------->add roaming/npm path in path and system variables 

13/05/2019
14/05/2019

in index.html in public---we have title
index.js--->is entry point for java script

ReactDom has function called render takes two parameter (<compoent name>,document.getElementById(where to put))

---->import css files in js only


every Component class will extend COmponent class-->i.e included with react

S3e1--->Smart component and dumb component--->smart component having states(must have class)
--->dumb component are static 
and stateless function

to amnage state among component we need ContextAPI, stateManager like Redux,

S3e2
JSX---->jsx rule use className instead of class
	---->we can't use for else we can use htmlFor
	---->we must have to use /> even in input or <br />
	--->must return one element only


	s3e3=----->in class we can define constant like js in render and while returning we can use curly braces {name}
	in div to access

we can use html anywhere in return, we can use braces only if want to perform computation  

S3e4
------->vs extension ES7 React/Redux/GraphQL/React-Native snippets
---> while importing is we export as default no need to use { curly braces while importing} 

S3e5--->function in place of class--->if we dont want states

s3e6--->props are short for prooperty --->when we use child component in parent component for viewing component we can
pass values in child component whether class level component or function level componen---->in order to access it from 
function level we can get one parameter named as props and in class level component we can use it by this keyword in curly 
{this.props.name} braces

Destructuring in ES6-===> {name, phone}=this.props;--->must have same structure


07.06.2019


React router (S6e1)
npm i react-router-dom

import {BrowseRouter as Router, Route, Switch} from 'react-router-dom';



Router>
            <Switch>
            <Route exact path="/" component={Home}></Route>
            <Route exact path="/aboutMe" component={AboutMe}></Route>
            <Route exact path="/experience" component={Experience}></Route>
        </Switch>
    </Router>);

import {Link} from 'react-router-dom';

<Link to="route" target="_blank" onClick={(event) => {event.preventDefault(); window.open(this.makeHref("route"));}} />

<Link to="/" className="nav-link" >Home<Link>
    git remote add origin URL_TO_YOUR_REPO
    git remote -v      ==========>to chechk remote URL

    First, we make a backup copy of our master branch, in case something goes wrong. (This isn’t strictly necessary because of git reflog, but I find making a backup branch quicker and involving less thought). Once we make this backup branch we’re going to ignore it and ultimately when we’re done with this process we can delete it.

git branch bkup
Now, we rebase our master branch with the remote branch origin/master.

git rebase origin/master

https://code.visualstudio.com/docs/editor/emmet


pass data bw components
https://towardsdatascience.com/passing-data-between-react-components-parent-children-siblings-a64f89e24ecf


https://pixinvent.com/stack-responsive-bootstrap-4-admin-template/html/ltr/vertical-menu-template/card-bootstrap.html

to create build---npm run build---->this will create build folder with needed build

firebase --version


firebase---->go to console--->(on website https://console.firebase.google.com/project/portfolio-fd8ac/hosting/main)

npm install -g firebase-tools----to install firebase tool


login to firebase---command----->firebase login---->

to create build---npm run build---->this will create build folder with needed build




then init command-------->command----->firebase init--->then confirm it by pressing (Y)---->then selesct hosting 
by arrow key and select by pressing space bar---then hit enter----->

if  Error: Authentication Error: Your credentials are no longer valid. Please run firebase login --reauth

if you dont want to use public as your directory--->then enter build-----
--->otherwise enter location like dist by putting build into dist folder

rewrite all urls to /index.html----N
  
overwrite 404.html----->N

don't rewrite index.html press (N)


then---> command----->firebase deploy

OR
At the time of deploy..

{
  "hosting": {
    "site": "adarshpvghi",
    "public": "public",
    ...
  }
}


firebase projects:list





instagrammm--->
https://www.instagram.com/oauth/authorize/?client_id=1d6d81e5cc2b4a6687d3bb42a95bda0d&redirect_uri=https://portfolio-fd8ac.firebaseapp.com/



https://portfolio-fd8ac.firebaseapp.com/#access_token=7926815114.1d6d81e.0ccb90e8ef9948f79f51929e5754493e

https://www.instagram.com/developer/authentication/


Axios---https://alligator.io/react/axios-react/
# Yarn
$ yarn add axios

# npm
$ npm install axios --save


return(
            <div>
              {this.props.isShowModal ?           
              <div className= "" id="myModal"></div> : null}
              

================================================for dynamic loading of component


              constructor(props) {
    super(props);
      this.state = {
        count: this.props.count
      }
    }
  increment(){
    console.log("this.props.count");
    console.log(this.props.count);
    ////////////////////////////////////////////////////////
    The component’s state changes
A re-render can only be triggered if a component’s state has changed. The state can change from a props change, or from a direct setState change. The component gets the updated state and React decides if it should re-render the component. Unfortunately,
 by default React is incredibly simplistic and basically re-renders everything all the time.


https://reactjs.org/docs/render-props.html


---------------------------------------------------
fontAwesome
If you are new to React JS and using create-react-app cli command to create the application, then run the following NPM command to include the latest version of font-awesome.

npm install --save font-awesome
import font-awesome to your index.js file. Just add below line to your index.js file

import '../node_modules/font-awesome/css/font-awesome.min.css'; 
or

import 'font-awesome/css/font-awesome.min.css';
Don't forget to use className as attribute

 render: function() {
    return <div><i className="fa fa-spinner fa-spin">no spinner but why</i></div>;
}
________________________________________________________________________________________________-


Author to react slider
https://medium.com/@ilonacodes/simple-image-carousel-with-react-5e20933001bf


Ilona Codes

_______________________________________________________________________________________

get Data from other class in react

export function HelloChandu() {

}


import { HelloChandu } from './helpers'
-______________________________________________________

Check imageloading
 handleImageLoaded() {
    this.setState({ imageStatus: "loaded" });
  }

  handleImageErrored() {
    this.setState({ imageStatus: "failed to load" });
  }

  render() {
    return (
      <div>
        <img
          src={this.props.imageUrl}
          onLoad={this.handleImageLoaded.bind(this)}
          onError={this.handleImageErrored.bind(this)}
        />
        {this.state.imageStatus}
      </div>
    );

    +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

    ReactHooks--> allow to create functional components--->useState,
useEffect--->takes two parameter 1. the function like componenetDidMount(this function can take cleaning function) and the dependency array  


export const useInstaPhotos = (isDataLoaded) =>{
  const [instaPhotos,setInstaphotos] = useState([])
  const [isDataLoadedOnce,setIsDataLoadedOnce] = useState(isDataLoaded)
  useEffect(() => {
    const InstaImg=[];
    console.log("sending http request");
        axios.get('https://api.instagram.com/v1/users/self/media/recent/?access_token=7926815114.1d6d81e.0ccb90e8ef9948f79f51929e5754493e')
        .then((res)=>{
              res.data.data.map((element)=>{
                InstaImg.push(element.images.standard_resolution.url)
              })
              setInstaphotos(InstaImg)
              setIsDataLoadedOnce(true)
        } 
              ).catch((err)=>{console.log('insta error',err)})
              
  }, [isDataLoadedOnce])

  return [instaPhotos,isDataLoadedOnce]; 

}

______________________________________________________________________________________

conditional styling

className={(this.state.collapsed  ? "collapse" : "") + ' navbar-collapse'}

____________________________________________________________________________________
to find inner  of the screen
const [windowWidth,setWindowWidth]=useState(window.innerWidth);


useEffect(()=>{
    // window.addEventListener('resize',)
    // console.log("galleryurl",localStorage.getItem("galleryImages"))
    const handleResize = () => setWindowWidth(window.innerWidth);
    window.addEventListener('resize',handleResize)
    setInstaPhotos(JSON.parse(localStorage.getItem("galleryImages")));
    return() => {
      window.removeEventListener('resize',handleResize)
    } 
  },[localStorage.getItem("galleryImages").length])


_________________________________________________________________________________

styling
https://www.bootdey.com/snippets/view/User-list-page#preview
_____________________________________________________________________________________

react tutorial
https://openclassrooms.com/en/courses/4286486-build-web-apps-with-reactjs/4286711-build-a-ticking-clock-component



___________________________________________________________________________________________________________

dynamic level css in reactjs

import classLevelStyles from '../styles/cell.css';

const style = {
    width:  this.calcWidth()  + 'px',
    height: this.calcHeight() + 'px',
};

<div className={classLevelStyles} style={style} />

______________________________________________________________________________
Dynamically changing CSS classes--->https://www.andreasreiterer.at/dynamically-add-classes/


render() {
  const { isBoxVisible } = this.state;

  return (
    <div className="App">
      <button onClick={this.toggleBox}>Show Box</button>

      <div className={`box ${isBoxVisible ? "" : "hidden"}`}>
        <p>I'm the box</p>
      </div>

    </div>
  );
}
______________________________________________________
var heading = document.getElementById('heading');
 if (computerChoice <= 0.33) {
     heading.innerHTML = "This is a good!";
     heading.setAttribute("class", "pink");

https://stackoverflow.com/questions/21816359/add-class-and-change-html

______________________________________________________________________________


colors
https://codepen.io/k3no/pen/gMrKbX
______________________________________________________________________________

ADVANCED JAVA

core java ----only standalone application--->running on single system--->two types of standalone system--->
GUI(desktop based application) and CUI(character user interface)

Advanced java---->web application---->technologies--->JDBC,Servlet,JSP

find cureent version of these technologies

______________________________________________________________________________

dynamic img url
src={`http://localhost:8000/img%20%28${ele}%29.jpg`}
<img src={require(`${image}`)} alt="product" />

______________________________________________________________________________

ngrok ---https://www.sitepoint.com/accessing-localhost-from-anywhere/


go to ngrok folder---->run ngrok http port_number 

______________________________________________________________________________  

CORS problem 

https://www.fullstackreact.com/articles/using-create-react-app-with-a-server/

axios.get('https://example.com/getSomething', {
headers:{    
    'Accept': 'application/json',
    'Content-Type': 'application/json',
    'Access-Control-Allow-Origin': '*' 
}
})
_________________________________________________________________________________
slider

https://medium.com/@gianpaul.r/rendering-new-images-onclick-in-react-7cf0fee2184f

_________________________________________________________________________________

Regular Expression

{
   "type": "string",
   "pattern": "^(\\([0-9]{3}\\))?[0-9]{3}-[0-9]{4}$"
}
"555-1212"
"(888)555-1212"
"(888)555-1212 ext. 532"
"(800)FLOWERS"

[a-zA-Z]+
([12]\d{3}/(0[1-9]|1[0-2])/(0[1-9]|[12]\d|3[01]))
^[0-9]{10,10}$
^(([^<>()[\].,;:\s@"]+(\.[^<>()[\].,;:\s@"]+)*)|(".+"))@(([^<>()[\].,;:\s@"]+.)+[^<>()[\].,;:\s@"]{2,})$
^(?:Male|Female)$
^(?!\s*$).+

^[0-9]+(?:\.[0-9]+)?$    ====>matches any positive integer and float value 


https://regex101.com/    -------------->to check regEx

https://digitalfortress.tech/tricks/top-15-commonly-used-regex/

http://regexlib.com/UserPatterns.aspx?authorid=98d94464-5cb5-46bf-97e8-3fd4cec2e19c
_________________________________________________________________________________

Run command-line as an Administrator. Then run the below mention command. type your port number in yourPortNumber

netstat -ano | findstr :<yourPortNumber>

Then you execute this command after identify the PID.
taskkill /PID <typeyourPIDhere> /F

______________________________________________________________________________ 
to hide
--->prefernce--------->setting--->setting json---->workspace setting

navigate within file------->command+shift+p

navigate within folder------->command+p

generate setter---start writing setT---->and it will give suggestion
JDBC

1. import package---------------------->phone----------->(import java.sql.*)
2.1  load and ----------->network------------>com.mysql.jdbc.driver------->download jar file--->mysql.connector
          2.2 register the driver------------->Class.forName("com.mysql.jdbc.Driver")
3.connecting or establishing the connection---------->dial a no.----------->Connection con= DriverManager.getConnection("URL or database name","userName","password")
4.create the statement----------------->ask the query------------>a) statement b) prepared statement c) execute the procedural lang.----->

Statement st = con.createStatement();

5.execute the query--------------------->listen------>

ResultSet rs = st.executeQuery("select * from student");


6.process the result-------------------------->comment

rs.next()----->// or we can use // while(rs.next) //oving the cursor from table title :P

rs.getInt(1) // 1st column data + " " + rs.getInt(2)// 2nd column data


7.close the connection-------------------------------->disconnect the call

st.close()
con.close()

import java.sql.*;

main(){

}

----------------------------------___________________________________________________________________________________________________________
to set path temporariy in java

java -cp ./classes;. className

___________________________________________________________________________________________________________

Reaact Conf 2019---->watched on 28112019

2014-----React came in 2014----------1st conference--------react native learn once write anywhere-------

low barrier to entry----------> super easy to use-------->spark your curiosity------->
ability to scale--->
high productivity


react developer tool--------> for google chrome extension
indistinguishable----->
React 16.8 : the one with hooks

various input device loaded ------>stylus pen---->
------->selective hydration
------>concurrent
Picture worth thousand words--->

------------------------>order of precedence according to style sheet 
------------------------>className={styles('blue','red')}------->actual overriding in react--------------->svg in img src using react----->
----------------->use REM instead px i.e rootElement

load important data first------->this isn't the best win....

<React.suspense>------>loading according to componet not with type of data--->

Developer -----------Tanya  --twitter--->@_Tany_    hello@tany4.com---------->OLIO---->sharing food-------->build in react 

Tejas at 2:42----->it is not a formal specification----->play guessing games--->GraphQL----->formal specification ,remove guessing games, Meaningful discussion,

schema definition---> strong contractual request--->

bcoz we dont trust api in js------>

restful-react <RestfulProvider>----->package------->it has data,loading and error--------always use id-------->

==========================================

07:48:00

we are ready gif====>

7:59:00

ms. becca====>

react State

state-conflict

people===>the Newbie

=======>The loyalist

state===>setState or useState



______________________________________________________________________________

sofie bitts---->our own environment--->

mutaion mode--->div.style.color = 'red';

persistent mode----->

view = createView()----->


-______________________________________________________

https://zacjones.io/handle-multiple-inputs-in-react-with-hooks


multiple input target with hooks tutorial above
______________________________________________________
Regex: ^1?([1-9])(\d{9})

NODE                     EXPLANATION
--------------------------------------------------------------------------------
  ^                        the beginning of the string
--------------------------------------------------------------------------------
  1?                       '1' (optional (matching the most amount
                           possible))
--------------------------------------------------------------------------------
  (                        group and capture to \1:
--------------------------------------------------------------------------------
    [1-9]                    any character of: '1' to '9'
--------------------------------------------------------------------------------
  )                        end of \1
--------------------------------------------------------------------------------
  (                        group and capture to \2:
--------------------------------------------------------------------------------
    \d{9}                    digits (0-9) (9 times)
--------------------------------------------------------------------------------
  )                        end of \2
  _________________________________________________________________________________

OBSERVABLES

INTERVAL
While interval emits the first event after a given time and then continuously with the same interval
  
  TIMER
   timer starts after a given time to emit events every x time. For our two updates per second we can start by using timer(0, 500). 
   This will start firing events right of the bat and after that twice a second.

.timer(10000, 5000)
    // stop this observable chain if stopTimer$ emits a value
    .takeUntil(stopTimer$)
    // select the model


   pipe can have multiple function as parameter like ,filter,map


   or

   const timer = Rx.Observable.timer(1000);

timer
  .finally(() => console.log('All done!'))
  .subscribe()
// wait 1 second...
// All done!
Others will run forever, such as interval…

const interval = Rx.Observable.interval(1000);
interval
  .finally(()  => console.log('All done!'))
  .subscribe(x => console.log(x))
// 0
// 1
// and so on...


{

flatmap or merge map----sequential

forkjoin----->for parallel request

https://www.youtube.com/watch?v=2wSgZ6hDGec

 }
   ______________________________________________________
  
  sites design awesome and Rxjs well explained
  https://fireship.io/lessons/rxjs-basic-pro-tips/

  ______________________________________________________________________________
  concat always creates new array ehile push mutates to existing array

  ______________________________________________________________________________
  store array in hooks

  useEffect(()=>{
         
            
               if(spreadSheet.length!=0)
               {setSpreadSheetData(spreadSheetData => [...spreadSheetData, spreadSheet]);
                  }
               
            },[spreadSheet.length])


store object even in hooks

var element = {}, cart = [];
element.id = id;
element.quantity = quantity;
cart.push(element);            

 ______________________________________________________________________________




to run reacts code on specific port in ubuntu

 "scripts": {
    "start": "PORT=8080 react-scripts start",
.
.
.
    }

in ubuntu system




__________________________________________________________________________________
 useReducer uses.....to add multiple input element into states 

 const [userInput, setUserInput] = useReducer(
        (state, newState) => ({...state, ...newState}),
        {
            name :'',
            dob :'',
            mno :'',
            email :'',
            SystemUrl:''
        }
    );


    const handleChange = evt => {
        const name = evt.target.name;
        const newValue = evt.target.value;
        setUserInput({[name]: newValue});
        
    }

     <div className="col-md-12 addIn"><label className="fixedDisplay">Email:</label><input className="adjustWidth" name="email" value={userInput.email} onChange ={handleChange} type="text"/></div>
               
another linkkkkk---->https://levelup.gitconnected.com/clean-components-with-react-hooks-part-2-41b92f64f8b3
   
   
   input unfocusses onChange
   24


1
it is because you are rendering the form in a function inside render().

Every time your state/prop change, the function returns a new form. it caused you to lose focus.

Try putting what's inside the function into your render directly.

       <main id="main" role="main">
            <div className="container-fluid">
                <FormPostSingle />
            </div>
        </main>
====>

       <main id="main" role="main">
            <div className="container-fluid">
                <form onSubmit={onSubmit}>
                    <InputText name="title" label="Title" placeholder="Enter a title" onChange={onChange} value={valueTitle} />
                    <InputSubmit name="Save" />
                </form>
            </div>
        </main>

        https://stackoverflow.com/questions/42573017/in-react-es6-why-does-the-input-field-lose-focus-after-typing-a-character


   
    ____________________________________________________________________________________________________________________________

style={{ border: "1px solid red" }}>

______________________________________________________________________________

https://usehooks.com/page/3

______________________________________________________

componentDidUpdate works whenever props changes --->change css or something with that props
______________________________________________________________________________

add more key value to same object in javascript


let obj1={};
               // obj1.push({name: elemm2.gs$cell.inputValue});
               // obj1.ad
               obj1={name: elemm2.gs$cell.inputValue} ;  
               console.log("elemm2.gs$cell.inputValue akhilldfsdfsd",JSON.stringify(obj1))


               var obj = {key1: "value1", key2: "value2"};
var pair = {key3: "value3"};
obj = {...obj, ...pair};

document.body.innerHTML = JSON.stringify(obj);

______________________________________________________

Array map

https://futurestud.io/tutorials/node-js-how-to-run-an-asynchronous-function-in-array-map


______________________________________________________

https://javascript.info/async-iterators-generators

______________________________________________________________________________
if multiple statement are rendered on view then return statement is required in map...

______________________________________________________
using variable in className
<div className={`${isBoxVisible ? "smenu" : "disNone"}`}  >

 ______________________________________________________

 iterate over object

 for (var prop in obj) {
    if (Object.prototype.hasOwnProperty.call(obj, prop)) {
        // do stuff
    }

    // Object.entries(props.getDownloadNavData).forEach(([key, value]) => console.log("akkkkkkk",key))
       
       
        // for (const value of Object.values(props.getDownloadNavData)) { 
        //   console.log("hillllppppppp  ",value)
        // }

        // for (const [key, value] of Object.entries(props.getDownloadNavData[0])) {console.log("hillllppppppp  ",value) }
        
        
        //Object.values(props.getDownloadNavData[0]).forEach(value => console.log("hillllppppppp  ",value))
        
        
        // for(var property in props.getDownloadNavData){
        //   console.log("hillllppppppp  ",props.getDownloadNavData[property])
        // }


in template
Object.entries(props.getDownloadNavData[0]).map(([key,value]) => {
                    return !value.includes(null) ?(
                    <div   id="messages" ref={profile}>
                    <div  className="btnDownload"><i className="fa fa-envelope"></i>{value}</div>
                    <div  className="smenu">
                      <div >new</div>
                      <div >Sent</div>
                      <div >Spam</div>
                    </div>
                  </div>
                  ):null
                }
    ______________________________________________________

    
    ______________________________________________________
tips react by akhil
when we use arrow function in onClick then it does not call/sense automatically

 
     whenever loop or map returns the same value there may be chances of overridden of values having same key name
 
 useReducer is only for multiple state


 sequence does matter in JS

 5) each statement takes sometime in reactJs

 6) don't use anything which is unknkown
    ______________________________________________________  


  hyperLink on same page or request on same page using

  window.location.href=getModifiedString(value)[1]

  in javascript

  to next tab
  window.open('http://stackoverflow.com', '_blank');

  ______________________________________________________________________________

  random number
  https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/random

  ______________________________________________________________________________


  remove first item from array
  setManageState(temp.splice(temp[temp.length-1], 1)[temp.length-1])
  ______________________________________________________

  Merge two object in one

  const object3 = {...object1, ...object2 }
If both objects have a property with the same name, then the second object property overwrites the first.

soln
const returnedTarget = Object.assign(insert, props.getDownloadSubmenuData[indexed]);
            setChangedMenu(returnedTarget)

            ______________________________________________________________________________

            uninstall packeage in npm
            npm un -g localtunnel

            _________________________________________________________________________________
            pass another parameter with evevnt
            <fieldset onChange={(e) => this.props.handleChange("tags", e)}>

            ____________________________________________________________________________________
          iteraate over html collection
          
            Array.from(MultiSelectRef.current.selectedOptions).forEach(function (element) { 
            calculateValue+=element.label+",";
          }); 

______________________________________________________________________________
typeof object == 'object'

+_________________________________________________________________________________

From child to parent communication in react js---->but makesure calling should be arrow function in child component

Short Answer

Parent:

<div className="col-sm-9">
     <SelectLanguage onSelectLanguage={this.handleLanguage} /> 
</div>

Child:

handleLangChange = () => {
    var lang = this.dropdown.value;
    this.props.onSelectLanguage(lang);            
}

______________________________________________________
-blue: #007bff;
    --indigo: #6610f2;
    --purple: #6f42c1;
    --pink: #e83e8c;
    --red: #dc3545;
    --orange: #fd7e14;
    --yellow: #ffc107;
    --green: #28a745;
    --teal: #20c997;
    --cyan: #17a2b8;
    --white: #fff;
    --gray: #6c757d;
    --gray-dark: #343a40;
    --primary: #007bff;
    --secondary: #6c757d;
    --success: #28a745;
    --info: #17a2b8;
    --warning: #ffc107;
    --danger: #dc3545;
    --light: #f8f9fa;
    --dark: #343a40;

    ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

    delete property in object
    
    x={"a":"1","b":"2"}
	delete x.a

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

to change state from its previous value

setSeconds(seconds => seconds + 1);

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
to run json-server

json-server --watch db.json
================================
First, you need to check json-server installed globally or not. or you can install it globally by

npm install -g json-server
If you install it locally in your project, use npx to run it

npx json-server --watch db.json

npx json-server --watch db.json --port 3001

=====>post is added by default , if using post request

===>everythong depends on id
_________________________________________________________________________________


react-table

basic example
https://codesandbox.io/s/github/tannerlinsley/react-table/tree/master/examples/basic

_________________________________________________________________________________

to execute multiple commands simultaneously

npm i --save concurrently

"scripts": {
    "start": "react-scripts start",
    "dev": "concurrently \"npm run start\" \"npx json-server --watch db.json --port 3001\""
}

https://medium.com/@joelazarz/using-concurrently-with-json-server-and-your-react-app-3d07487acc50

_________________________________________________________________________________

<div
  contentEditable='true'
  onInput={e => console.log('Text inside div', e.currentTarget.textContent)}
>
Text inside div
</div>

_________________________________________________________________________________

to refresh page using js

<button onClick={() => window.location.reload(false)}>Click to reload!</button>




https://upmostly.com/tutorials/how-to-refresh-a-page-or-component-in-react

______________________________________________________________________________
